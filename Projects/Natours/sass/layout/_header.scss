.header {
  /* this is the same as 95% of the viewport */
  height: 95vh;
  background-image: linear-gradient(
    /* direction of the gradient */
    to right bottom,
    /* to get the green gradient: the 0.8 refers to the opacity */
    rgba($color-primary-light, 0.8),
    rgba($color-primary-dark, 0.8)),
  url(../img/hero-small.jpg);
  /* this tries to make the img responsive */
  background-size: cover;
  /* this ensures that the top of the img always stays on top */
  background-position: top;
  /* the shape of the image
  2 sets of size for each corner of the image, clockwise:
  the first is top-left corner position of x and y
  the second one if top-right corner
  the third one is bottom-right corner
  the fourth one is bottom-left corner
  In this case, the first set is 0 because we're not changing anything related to where it starts
  The second one is 100% for hz because it takes 100% from left to right
  And 0 because vrt is still 0 for top-right corner
  The third one we still have 100% for hz but the vrt is smaller
  And finally, the fourth one 0 for hr and vrt goes up to 100%*/
  -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  position: relative;

  @media (min-resolution: 192dpi) and (min-width: 37.5em),
         (-webkit-min-device-pixel-ratio: 2) and (min-width: 37.5em),
         (min-width: 125em) {
    background-image: linear-gradient(
    to right bottom,
    rgba($color-primary-light, 0.8),
    rgba($color-primary-dark, 0.8)),
  url(../img/hero.jpg);
  }

  @include respond(phone) {
    -webkit-clip-path: polygon(0 0, 100% 0, 80% 100vh, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 80vh, 0 100%);
  }

  &__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem;
  }

  &__logo {
    height: 3.5rem;
  }

  &__text-box {
    /* CENTRALIZING THE ELEMENT
    we need to specify absolute positioning
    top and left 50% and this makes the element START at 50% of the screen
    left and top, so it won't be centralized */
    position: absolute;
    top: 40%; /* this is because asthetically it doesn't look centralized because of the shape we created */
    left: 50%;
    /* So we need the transform property to make it account the proportions
    of the element, and this will make it centralize */
    transform: translate(-50%, -50%);
    /* this is going to center the text elements (inline-block elements are treated as if they were text) */
    text-align: center;
  }
}
